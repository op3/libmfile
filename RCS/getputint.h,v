head	1.8;
access;
symbols;
locks;
comment	@ * @;


1.8
date	93.07.20.18.00.53;	author se;	state Exp;
branches;
next	1.7;

1.7
date	92.07.30.12.14.25;	author se;	state Exp;
branches;
next	1.6;

1.6
date	92.07.08.18.44.34;	author se;	state Exp;
branches;
next	1.5;

1.5
date	92.07.08.06.21.53;	author se;	state Exp;
branches;
next	1.4;

1.4
date	92.05.13.23.29.46;	author se;	state Exp;
branches;
next	1.3;

1.3
date	92.03.31.01.55.44;	author se;	state Exp;
branches;
next	1.2;

1.2
date	92.02.13.16.19.08;	author se;	state Exp;
branches;
next	1.1;

1.1
date	92.02.03.17.53.37;	author se;	state Exp;
branches;
next	;


desc
@header file for getputint.c
@


1.8
log
@modified for use with access method module
@
text
@/*
 * getputint.h:		Copyright 1992 by 
 *			Stefan Esser
 *			Institut for Nuclear Physics
 *			University of Cologne, Germany
 *
 */

#include <sys/types.h>

/* $Id: getputint.h,v 1.7 1992/07/30 12:14:25 se Exp $
 *
 * $Log: getputint.h,v $
 * Revision 1.7  1992/07/30  12:14:25  se
 * add copyright note
 *
 * Revision 1.6  1992/07/08  18:44:34  se
 * reestablished traditional function declarations for compatibility with
 * non ANSI compilers
 *
 * Revision 1.5  92/07/08  06:21:53  06:21:53  se (Stefan Esser)
 * changed 2nd parameter to get and put from char* to void* and introduced
 * local char *buffer for actual accesses
 * 
 * Revision 1.4  1992/05/13  23:29:46  se
 * changed second parameter of get and put from void * to char *
 *
 * Revision 1.3  1992/03/31  01:55:44  se
 * changed type of buffer from char* to void*
 * added definitions of {get,put}{le,he}8()
 *
 * Revision 1.2  1992/02/13  16:19:08  se
 * RCS Id and Log entries added
 *
 */

#if defined(__STDC__) || defined(__cplusplus)
# define P_(s) s
#else
# define P_(s) ()
#endif

/*
int   get    P_((int fd, void *buffer, u_int pos, u_int num));
int   put    P_((int fd, void *buffer, u_int pos, u_int num));
*/

/* signed low endian 8 byte matrix file */
u_int getle8 P_((amp ap, int *buffer, u_int pos, u_int num));
u_int putle8 P_((amp ap, int *buffer, u_int pos, u_int num));

/* signed high endian 8 byte matrix file */
u_int gethe8 P_((amp ap, int *buffer, u_int pos, u_int num));
u_int puthe8 P_((amp ap, int *buffer, u_int pos, u_int num));

/* signed low endian 4 byte matrix file */
u_int getle4 P_((amp ap, int *buffer, u_int pos, u_int num));
u_int putle4 P_((amp ap, int *buffer, u_int pos, u_int num));

/* signed high endian 4 byte matrix file */
u_int gethe4 P_((amp ap, int *buffer, u_int pos, u_int num));
u_int puthe4 P_((amp ap, int *buffer, u_int pos, u_int num));

/* unsigned low endian 2 byte matrix file */
u_int getle2 P_((amp ap, int *buffer, u_int pos, u_int num));
u_int putle2 P_((amp ap, int *buffer, u_int pos, u_int num));

/* unsigned high endian 2 byte matrix file */
u_int gethe2 P_((amp ap, int *buffer, u_int pos, u_int num));
u_int puthe2 P_((amp ap, int *buffer, u_int pos, u_int num));

/* signed low endian 2 byte matrix file */
u_int getle2s P_((amp ap, int *buffer, u_int pos, u_int num));

/* signed high endian 2 byte matrix file */
u_int gethe2s P_((amp ap, int *buffer, u_int pos, u_int num));
@


1.7
log
@add copyright note
@
text
@d11 1
a11 1
/* $Id: getputint.h,v 1.6 1992/07/08 18:44:34 se Exp $
d14 3
d43 1
d46 1
d49 2
a50 2
u_int getle8 P_((int fd, int *buffer, u_int pos, u_int num));
u_int putle8 P_((int fd, int *buffer, u_int pos, u_int num));
d53 2
a54 2
u_int gethe8 P_((int fd, int *buffer, u_int pos, u_int num));
u_int puthe8 P_((int fd, int *buffer, u_int pos, u_int num));
d57 2
a58 2
u_int getle4 P_((int fd, int *buffer, u_int pos, u_int num));
u_int putle4 P_((int fd, int *buffer, u_int pos, u_int num));
d61 2
a62 2
u_int gethe4 P_((int fd, int *buffer, u_int pos, u_int num));
u_int puthe4 P_((int fd, int *buffer, u_int pos, u_int num));
d65 2
a66 2
u_int getle2 P_((int fd, int *buffer, u_int pos, u_int num));
u_int putle2 P_((int fd, int *buffer, u_int pos, u_int num));
d69 2
a70 2
u_int gethe2 P_((int fd, int *buffer, u_int pos, u_int num));
u_int puthe2 P_((int fd, int *buffer, u_int pos, u_int num));
d73 1
a73 1
u_int getle2s P_((int fd, int *buffer, u_int pos, u_int num));
d76 1
a76 1
u_int gethe2s P_((int fd, int *buffer, u_int pos, u_int num));
@


1.6
log
@reestablished traditional function declarations for compatibility with
non ANSI compilers
@
text
@d1 8
d11 6
a16 1
/* $Id: getputint.h,v 1.4 1992/05/13 23:29:46 se Exp $
a17 1
 * $Log:	getputint.h,v $
@


1.5
log
@changed 2nd parameter to get and put from char* to void* and introduced
local char *buffer for actual accesses
@
text
@d5 5
a9 1
 * $Log: getputint.h,v $
@


1.4
log
@changed second parameter of get and put from void * to char *
@
text
@d3 1
a3 1
/* $Id: getputint.h,v 1.3 1992/03/31 01:55:44 se Exp $
d6 3
d24 2
a25 2
int   get    P_((int fd, char *buffer, u_int pos, u_int num));
int   put    P_((int fd, char *buffer, u_int pos, u_int num));
@


1.3
log
@changed type of buffer from char* to void*
added definitions of {get,put}{le,he}8()
@
text
@d3 1
a3 1
/* $Id: getputint.h,v 1.2 1992/02/13 16:19:08 se Exp $
d6 4
d21 2
a22 2
int   get    P_((int fd, void *buffer, u_int pos, u_int num));
int   put    P_((int fd, void *buffer, u_int pos, u_int num));
@


1.2
log
@RCS Id and Log entries added
@
text
@d3 1
a3 1
/* $Id$
d5 4
a8 1
 * $Log$
d16 11
@


1.1
log
@Initial revision
@
text
@d3 5
@
