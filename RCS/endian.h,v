head	1.4;
access;
symbols;
locks;
comment	@ * @;


1.4
date	92.07.30.12.14.25;	author se;	state Exp;
branches;
next	1.3;

1.3
date	92.07.08.18.44.34;	author se;	state Exp;
branches;
next	1.2;

1.2
date	92.02.13.16.19.08;	author se;	state Exp;
branches;
next	1.1;

1.1
date	92.02.03.17.53.37;	author se;	state Exp;
branches;
next	;


desc
@definition of endianess for known processors and of macros to 
convert 2 and 4 byte intergers between high and low endian
@


1.4
log
@add copyright note
@
text
@/*
 * endian.h:		Copyright 1992 by 
 *			Stefan Esser
 *			Institut for Nuclear Physics
 *			University of Cologne, Germany
 *
 */

/* $Id: endian.h,v 1.3 1992/07/08 18:44:34 se Exp $
 *
 * $Log: endian.h,v $
 * Revision 1.3  1992/07/08  18:44:34  se
 * reestablished traditional function declarations for compatibility with
 * non ANSI compilers
 *
 * Revision 1.2  92/02/13  16:19:08  16:19:08  se (Stefan Esser)
 * RCS Id and Log entries added
 * 
 */

#if defined (i386) || defined (i486) || defined (MIPSEL) || defined (vax)
#  define LOWENDIAN 1
#endif

#define SWAB2(i)    (((i >> 8) & 0xFF) | ((i << 8) & 0xFF00))
#define SWAB4(i)    (((i >> 24) & 0xFF) | ((i >>  8) & 0xFF00) | ((i <<  8) & 0xFF0000) | ((i << 24)))
#ifdef LOWENDIAN
#  define GETHE2(i) SWAB2(i)
#  define GETHE4(i) SWAB4(i)
#  define GETLE2(i) (i)
#  define GETLE4(i) (i)
#else
#  define GETHE2(i) (i)
#  define GETHE4(i) (i)
#  define GETLE2(i) SWAB2(i)
#  define GETLE4(i) SWAB4(i)
#endif

@


1.3
log
@reestablished traditional function declarations for compatibility with
non ANSI compilers
@
text
@d1 5
a5 1
/* $Id$
d7 9
a15 1
 * $Log:	endian.h,v $
@


1.2
log
@RCS Id and Log entries added
@
text
@d3 4
a6 1
 * $Log$
@


1.1
log
@Initial revision
@
text
@d1 5
@
