head	1.9;
access;
symbols;
locks;
comment	@ * @;


1.9
date	93.07.20.17.59.23;	author se;	state Exp;
branches;
next	1.8;

1.8
date	92.12.31.10.59.06;	author se;	state Exp;
branches;
next	1.7;

1.7
date	92.07.30.12.09.41;	author se;	state Exp;
branches;
next	1.6;

1.6
date	92.07.25.14.19.42;	author se;	state Exp;
branches;
next	1.5;

1.5
date	92.07.08.21.03.39;	author se;	state Exp;
branches;
next	1.4;

1.4
date	92.07.08.18.44.34;	author se;	state Exp;
branches;
next	1.3;

1.3
date	92.06.10.11.21.24;	author se;	state Exp;
branches;
next	1.2;

1.2
date	92.02.13.14.37.45;	author se;	state Exp;
branches;
next	1.1;

1.1
date	92.02.03.17.38.25;	author se;	state Exp;
branches;
next	;


desc
@extract shared memory spectra characteristics from file with shm_id 
and data provided by the shared memory segment
@


1.9
log
@obsolete, has been replaced by shm_access access methods
@
text
@/*
 * shm_minfo.c:		Copyright 1992 by 
 *			Stefan Esser
 *			Institut for Nuclear Physics
 *			University of Cologne, Germany
 *
 */

#ifndef NO_SHM

#include <stdlib.h>
#include <errno.h>
#include <memory.h>
#include <string.h>
#include <ctype.h>

#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>

#include "mfile.h"
#include "getputint.h"
#include "shm_minfo.h"
#include "shm_getput.h"

static char rcsid[] = "$Id: shm_minfo.c,v 1.8 1992/12/31 10:59:06 se Exp $";

/* $Log: shm_minfo.c,v $
 * Revision 1.8  1992/12/31  10:59:06  se
 * nothing will be compiled if NO_SHM is defined
 *
 * Revision 1.7  1992/07/30  12:09:41  se
 * added copyright note
 *
 * Revision 1.6  1992/07/25  14:19:42  se
 * now includes string.h instead of strings.h
 *
 * Revision 1.5  1992/07/08  21:03:39  se
 * general cleanup for strictest GCC warning levels
 *
 * Revision 1.4  1992/07/08  18:44:34  se
 * reestablished traditional function declarations for compatibility with
 * non ANSI compilers
 *
 * Revision 1.3  92/06/10  11:21:24  11:21:24  se (Stefan Esser)
 * changes to reflect mat->specinfo now being union {int, int*}
 * 
 * Revision 1.2  1992/02/13  14:37:45  se
 * added rcsid[]
 *
 */


#ifdef undef
void shm_probe (mat)
     MFILE *mat;
{
  char buf[128], *p;
  int shmid;
  struct shmid_ds shm_stat;
  void *shm_addr;
  int shm_size;
  
  static char shm_magic[] = "shared memory (shm_alloc)\nid=";

  memset (buf, 0, sizeof(buf));
  if (get (mat->fd, buf, 0, sizeof(buf)) < sizeof(shm_magic))	return;
  if (strncmp (buf, shm_magic, sizeof (shm_magic) -1) != 0)	return;

  p = buf + sizeof(shm_magic) -1;
  while (isspace(*p)) p++;
  shmid = 0;
  while (isdigit(*p)) shmid = shmid * 10 + (*p++ - '0');

  shm_addr = (void *) shmat (shmid, NULL, SHM_RDONLY);
  if ((int)shm_addr == -1)					return;

  if (shmctl (shmid, IPC_STAT, &shm_stat) != 0)			return;
  shm_size = shm_stat.shm_segsz;

  mat->status	       |= MST_DIMSFIXED;
  mat->filetype		= MAT_SHM;

  mat->levels		= 1;
  mat->lines		= 1;
  mat->columns		= shm_size / sizeof(int);

  mat->mgeti4f		= shm_get;
  mat->mputi4f		= NULL;
  mat->muninitf		= shm_uninit;

  mat->specinfo.p	= shm_addr;
}

void shm_init (mat)
     MFILE *mat;
{
  mat->filetype = MAT_INVALID;
}


int shm_putinfo (mat, info)
     MFILE *mat;
     minfo* info;
{
  return 0;
}


int shm_uninit (mat)
     MFILE *mat;
{
  /* 
    not yet implemented:
    if shmctl() --> shm_attach == 1: 
       try to delete shm segment at close !
       no error, if we don't have permission to do this.
   */
  return shmdt ((char *)mat->specinfo.p);
}  

#endif /* NO_SHM */
#endif /*undef*/
@


1.8
log
@nothing will be compiled if NO_SHM is defined
@
text
@d26 1
a26 1
static char rcsid[] = "$Id: shm_minfo.c,v 1.7 1992/07/30 12:09:41 se Exp $";
d29 3
d54 1
d123 1
@


1.7
log
@added copyright note
@
text
@d9 2
d26 1
a26 1
static char rcsid[] = "$Id: shm_minfo.c,v 1.6 1992/07/25 14:19:42 se Exp $";
d29 3
d118 1
@


1.6
log
@now includes string.h instead of strings.h
@
text
@d1 8
d24 1
a24 1
static char rcsid[] = "$Id: shm_minfo.c,v 1.5 1992/07/08 21:03:39 se Exp $";
d27 3
@


1.5
log
@general cleanup for strictest GCC warning levels
@
text
@d4 1
a4 1
#include <strings.h>
d16 1
a16 1
static char rcsid[] = "$Id: shm_minfo.c,v 1.4 1992/07/08 18:44:34 se Exp $";
d19 3
@


1.4
log
@reestablished traditional function declarations for compatibility with
non ANSI compilers
@
text
@d16 1
a16 1
static char rcsid[] = "$Id: shm_minfo.c,v 1.2 1992/02/13 14:37:45 se Exp $";
d18 5
a22 1
/* $Log:	shm_minfo.c,v $
d38 1
a38 1
  char *shm_addr;
d52 1
a52 1
  shm_addr = (char *) shmat (shmid, NULL, SHM_RDONLY);
d69 1
a69 1
  mat->specinfo.p	= (int *)shm_addr;
@


1.3
log
@changes to reflect mat->specinfo now being union {int, int*}
@
text
@d18 4
a21 1
/* $Log: shm_minfo.c,v $
d68 2
a69 1
void shm_init (MFILE *mat)
d75 3
a77 1
int shm_putinfo (MFILE *mat, minfo* info)
d83 2
a84 1
int shm_uninit (MFILE *mat)
@


1.2
log
@added rcsid[]
@
text
@d16 1
a16 1
static char rcsid[] = "$Id$";
d18 4
a21 1
/* $Log$
d62 1
a62 1
  mat->specinfo		= (int *)shm_addr;
d85 1
a85 1
  return shmdt ((char *)mat->specinfo);
@


1.1
log
@Initial revision
@
text
@d16 6
@
